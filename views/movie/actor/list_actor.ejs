<%- include('../../partials/header.ejs') %>

<div class="container mt-5" style="padding: 3%">
  <h2 class="text-center">List of Actors</h2>
  <table class="table table-bordered table-hover align-middle" id="actorTable">
    <thead >
      <tr class="table table-secondary" >
        <th>Id</th>
        <th>Name</th>
        <th>Image</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody>
    </tbody>
  </table>
  <nav>
    <ul class="pagination justify-content-end" id="pagination">
      <li class="page-item" id="prevPage" onclick="changePage(-1)">
        <a class="page-link" href="#" aria-label="Previous">
          <span aria-hidden="true">&laquo;</span>
        </a>
      </li>
      <li class="page-item">
        <a class="page-link" id="currentPage" href="#">1</a>
      </li>
      <li class="page-item" id="nextPage" onclick="changePage(1)">
        <a class="page-link" href="#" aria-label="Next">
          <span aria-hidden="true">&raquo;</span>
        </a>
      </li>
    </ul>
  </nav>
</div>

<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editModalLabel">Chỉnh Sửa</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
      </div>
      <div class="modal-body">
        <form id="editForm">
          <input type="hidden" id="id" name="id" />
          <div class="mb-3">
            <label for="name" class="form-label">Tên</label>
            <input type="text" class="form-control" id="name" name="name" required />
          </div>
          <div class="mb-3">
            <label for="Image" class="form-label">Hình Ảnh</label>
            <input type="file" class="form-control" id="Image" name="image" />
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
        <button type="button" class="btn btn-primary" onclick="submitEdit()">Lưu thay đổi</button>
      </div>
    </div>
  </div>
</div>

<script>
  let currentPage = 1;

  async function fetchActors(page = 1) {
    try {
      const response = await fetch(`/movie/listActorTable?page=${page}`);
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      const data = await response.json();
      if (data.success) {
        if (data.getAll.length === 0 && page > 1) {
          // Nếu không có dữ liệu và không phải là trang đầu tiên, quay về trang trước
          changePage(-1);
          return;
        }
        populateActorTable(data.getAll);
        document.getElementById('currentPage').textContent = page;
        currentPage = page;

        // Kiểm tra nếu trang tiếp theo có dữ liệu
        const nextPageResponse = await fetch(`/movie/listActorTable?page=${page + 1}`);
        const nextPageData = nextPageResponse.ok ? await nextPageResponse.json() : { success: false, getAll: [] };
        const hasNextPage = nextPageData.success && nextPageData.getAll.length > 0;
        updatePaginationControls(hasNextPage, page > 1);
      } else {
        console.error('Error fetching actor data:', data.error);
        updatePaginationControls(false, false); // Không có dữ liệu, không hiển thị nút Next và Previous
      }
    } catch (error) {
      console.error('Error fetching actor data:', error);
      updatePaginationControls(false, false); // Có lỗi, không hiển thị nút Next và Previous
    }
  }

  function updatePaginationControls(hasNextPage, hasPrevPage) {
    const prevButton = document.getElementById('prevPage');
    const nextButton = document.getElementById('nextPage');

    prevButton.classList.toggle('disabled', !hasPrevPage);
    nextButton.classList.toggle('disabled', !hasNextPage);
  }

  function changePage(direction) {
    const newPage = currentPage + direction;
    if (newPage > 0) {
      fetchActors(newPage);
    }
  }

  // Khởi động với trang đầu tiên
  document.addEventListener('DOMContentLoaded', () => fetchActors(currentPage));

  function populateActorTable(actors) {
    const tableBody = document.querySelector('#actorTable tbody');
    tableBody.innerHTML = ''; // Clear existing table rows

    actors.forEach((actor) => {
      const row = document.createElement('tr');

      // Thêm cột ID
      const cellId = document.createElement('td');
      cellId.textContent = actor._id;
      row.appendChild(cellId);

      // Thêm cột tên
      const cellName = document.createElement('td');
      cellName.textContent = actor.name;
      row.appendChild(cellName);

      // Thêm cột hình ảnh
      const cellImage = document.createElement('td');
      const image = document.createElement('img');
      image.src = `http://139.180.132.97:3000/images/${actor.image}`;
      image.alt = actor.name;
      image.style.width = '100px'; // Set the size of the image
      cellImage.appendChild(image);
      row.appendChild(cellImage);

      // Thêm cột hành động
      const cellActions = document.createElement('td');
      const editButton = document.createElement('button');
      editButton.className = 'btn btn-primary btn-sm';
      editButton.textContent = 'Chỉnh sửa';
      editButton.setAttribute('data-actor', JSON.stringify(actor));
      editButton.onclick = () => editActor(editButton);
      cellActions.appendChild(editButton);

      row.appendChild(cellActions);
      tableBody.appendChild(row);
    });
  }

  function editActor(button) {
    const actor = JSON.parse(button.getAttribute("data-actor"));
    document.getElementById("id").value = actor._id;
    document.getElementById("name").value = actor.name;

    // Hiện modal
    var myModal = new bootstrap.Modal(document.getElementById("editModal"));
    myModal.show();
  }

  async function submitEdit() {
    const id = document.getElementById("id").value;
    const formData = new FormData(document.getElementById("editForm"));

    try {
      const response = await fetch(`/movie/updateActor/${id}`, {
        method: "PUT",
        body: formData,
      });

      if (response.ok) {
        alert("Cập nhật thành công!");
        window.location.reload();
      } else {
        alert("Đã xảy ra lỗi khi cập nhật.");
      }
    } catch (error) {
      alert("Đã xảy ra lỗi khi cập nhật.");
      console.error(error);
    }
  }
</script>
