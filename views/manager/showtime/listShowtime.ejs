<%- include('../../partials/header.ejs') %>
<style>
  .hour {
    width: 60px;
    margin: 5px;
    padding: 2px;
    border: 1px solid black;
    background-color: #f1f1f1;
    border-radius: 5px;
    text-align: center;
  }
  .hour:hover {
    color: #007bff;
    border: 1px solid #007bff;
    transform: scale(1.05);
  }

  .edit-icon:hover {
    color: #007bff;
    transform: scale(1.1);
  }
  .margin-top {
    margin-top: 150px;
  }
  .search-wrapper {
    position: relative;
  }
  .search-wrapper .bi-search {
    position: absolute;
    top: 50%;
    left: 10px;
    transform: translateY(-50%);
    color: #aaa;
  }
  .search-wrapper input {
    padding-left: 2.5rem; /* Adjust padding to make room for the icon */
  }
</style>
<nav style="--bs-breadcrumb-divider: '>'" aria-label="breadcrumb" class="mt-3">
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="#">Quản lý suất chiếu</a></li>
    <li class="breadcrumb-item active" aria-current="page">Danh sách suất chiếu</li>
  </ol>
</nav>
<div class="card mb-3">
  <div class="card-body">
    <div class="d-flex mb-3">
      <button onclick="window.location.href = '/showtime/add/showtime'" class="btn btn-primary">
        Tạo suất chiếu
      </button>
      <div class="search-wrapper ms-3">
        <i class="bi bi-search"></i>
        <input
          id="searchInput"
          class="form-control me-2"
          type="search"
          placeholder="Tìm kiếm..."
          aria-label="Search"
          oninput="searchTable()" />
        <!-- <button class="btn btn-outline-success" type="submit" onclick="searchTable()">Search</button> -->
      </div>
    </div>
    <table class="table table-bordered align-middle table-hover">
      <thead class="table table-secondary">
        <tr class="text-center">
          <th>STT</th>
          <th>Ngày</th>
          <th>Giờ</th>
        </tr>
      </thead>
      <tbody id="tableBody">
        <!-- content -->
      </tbody>
    </table>
    <!-- Pagination -->
    <nav>
      <ul class="pagination justify-content-end">
        <li class="prevPageLi page-item">
          <a id="prevPage" class="page-link" href="#" aria-label="Previous">
            <span aria-hidden="true">&laquo;</span>
          </a>
        </li>
        <li class="page-item"><a id="numberPage" class="page-link" href="#">1</a></li>
        <li class="nextPageLi page-item">
          <a id="nextPage" class="page-link" href="#" aria-label="Next">
            <span aria-hidden="true">&raquo;</span>
          </a>
        </li>
      </ul>
    </nav>

    <!-- Modal Edit Date -->
    <div
      class="modal fade"
      id="editDateModal"
      tabindex="-1"
      aria-labelledby="editDateModalLabel"
      aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <!-- Modal header -->
          <div class="modal-header">
            <h5 class="modal-title" id="editDateModalLabel">Sửa ngày</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <!-- Modal body -->
          <div class="modal-body">
            <form id="editDateForm">
              <div class="mb-3">
                <label for="dateInput" class="form-label">Ngày</label>
                <input type="date" class="form-control" id="dateInput" />
              </div>
              <div class="mb-3">
                <label for="timeSelect" class="form-label">Giờ</label>
                <select id="timeSelect" name="timeSelect" class="form-control" multiple required>
                  <option value="" selected disabled>Chọn giờ...</option>
                </select>
              </div>
              <button type="submit" class="btn btn-primary">Lưu thay đổi</button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- getToken apiURl -->
<script>
  let token = "";
  let apiUrl = "";
  $(document).ready(function () {
    $.ajax({
      url: "/token/getToken",
      type: "GET",
      async: false, // đồng bộ
      success: function (data) {
        token = data.token;
        apiUrl = data.apiUrl;
      },
      error: function (error) {
        console.log(error);
      },
    });
  });
</script>
<!-- Pagination -->
<script>
  $(document).ready(function () {
    let currentIndex = 1;

    function fetData(currentIndex) {
      $.ajax({
        url: `${apiUrl}/showtimes?page=${currentIndex}`,
        type: "GET",
        headers: {
          Authorization: `Bearer ${token}`,
        },
        success: function (data) {
          let arrShowtime = data.getAll;

          if (arrShowtime.length === 0 && currentIndex > 1) {
            currentIndex--;
            return;
          }
          if (arrShowtime.length < 10) {
            $(".nextPageLi").addClass("disabled");
          }

          $("#numberPage").text(currentIndex);

          if (currentIndex === 1) {
            $(".prevPageLi").addClass("disabled");
          }

          displayTableRows(arrShowtime);
        },
        error: function (error) {
          console.log(error);
        },
      });
    }

    fetData(currentIndex);

    function displayTableRows(data) {
      const tbody = document.querySelector("#tableBody");

      while (tableBody.firstChild) {
        tableBody.removeChild(tableBody.firstChild);
      }

      const startIndex = (currentIndex - 1) * 10;

      for (let i = 0; i < data.length; i++) {
        let showtime = data[i];

        let hoursHtml = showtime.time
          .map((timeObj) => {
            return `<button                      
                        data-id="${timeObj._id}"
                        data-time="${timeObj.time}"
                        class="hour">${timeObj.time}
                    </button>`;
          })
          .join("");

        tbody.innerHTML += `
        <tr>
            <td class="text-center">${startIndex + i + 1}</td>
            <td>
                <div class="d-flex justify-content-between align-items-center">
                     <span>${new Date(showtime.date).toLocaleDateString()}</span>
                     <i  class="bi bi-pencil-square edit-icon" style="cursor: pointer;"
                         data-bs-toggle="modal" 
                         data-bs-target="#editDateModal"
                         data-id="${showtime._id}" 
                         data-date="${showtime.date}">
                     </i>
                </div>
            </td>
            <td>
                <div class="d-flex flex-wrap justify-content-center">
                ${hoursHtml}
                </div>
            </td>
        </tr>
        `;
      }
    }

    $("#nextPage").click(function () {
      currentIndex++;
      fetData(currentIndex);

      if (currentIndex > 1) {
        $(".prevPageLi").removeClass("disabled");
      }
    });

    $("#prevPage").click(function () {
      if (currentIndex > 1) {
        currentIndex--;
        $("#numberPage").text(currentIndex);
        fetData(currentIndex);
        $(".nextPageLi").removeClass("disabled");
      }
    });
  });
</script>
<!-- Gọi modal date và hiển thị dữ liệu cũ -->
<script>
  $(document).ready(function () {
    $("#editDateModal").on("show.bs.modal", function (event) {
      const button = $(event.relatedTarget); // Element kích hoạt modal

      const dateId = button.data("id"); // Lấy giá trị của data-id
      const dateValue = button.data("date"); // Lấy giá trị của data-date

      const dateInput = $(this).find("#dateInput"); // Lấy input date trong modal
      const dateIdInput = $(this).find("#dateId"); // Lấy input dateId trong modal

      dateInput.val(new Date(dateValue).toISOString().split("T")[0]); // Set giá trị của input date
      dateIdInput.val(dateId); // Set giá trị của input dateId

      $.ajax({
        url: `${apiUrl}/times/user`,
        type: "GET",
        headers: {
          Authorization: `Bearer ${token}`,
        },
        success: function (data) {
          $("#timeSelect").empty();
          $("#timeSelect").append(
            $("<option>").text("Chọn giờ...").attr("disabled", "disabled").attr("selected", "selected")
          );

          let dataTime = data.getall;
          for (let i = 0; i < dataTime.length; i++) {
            const option = $("<option>").val(dataTime[i]._id).text(dataTime[i].time);
            $("#timeSelect").append(option);
          }
        },
        error: function (error) {
          console.log(error);
        },
      });
      updateDate(dateId);
    });

    function updateDate(id) {
      $("#editDateForm").on("submit", function (e) {
        e.preventDefault();

        const newDate = $("#dateInput").val();
        const timeId = $("#timeSelect").val();

        $.ajax({
          url: `${apiUrl}/showtimes/${id}`,
          type: "PUT",
          headers: {
            Authorization: `Bearer ${token}`,
          },
          data: { date: newDate, time: timeId },
          success: function (data) {
            if (data.updateShowtime.message === "Time already exists ") {
              Swal.fire({
                title: "Cảnh báo!",
                text: `Suất chiếu ${data.updateShowtime.time} đã có trong ngày ${formatDate(newDate)}`,
                icon: "warning",
                confirmButtonText: "OK",
              });
            } else {
              Swal.fire({
                title: "Thành công!",
                text: "Sửa thành công!",
                icon: "success",
                confirmButtonText: "OK",
              }).then((result) => {
                location.reload();
              });
            }
          },
          error: function (error) {
            console.log(error);
            Swal.fire({
              title: "Lỗi!",
              text: "Đã xảy ra lỗi gì đó!.",
              icon: "error",
              confirmButtonText: "OK",
            }).then((result) => {
              location.reload();
            });
          },
        });
      });
    }
    function formatDate(dateString) {
      let date = new Date(dateString);
      let day = String(date.getDate()).padStart(2, "0");
      let month = String(date.getMonth() + 1).padStart(2, "0");
      let year = date.getFullYear();
      return `${day}-${month}-${year}`;
    }
  });
</script>
<!-- Search -->
<script>
  function searchTable() {
    const input = document.getElementById("searchInput").value.toLowerCase();
    const tableBody = document.getElementById("tableBody");
    const rows = tableBody.getElementsByTagName("tr");

    for (let i = 0; i < rows.length; i++) {
      const row = rows[i];
      const cells = row.getElementsByTagName("td");
      let match = false;

      for (let j = 0; j < cells.length; j++) {
        if (cells[j].innerText.toLowerCase().indexOf(input) > -1) {
          match = true;
          break;
        }
      }

      if (match) {
        row.style.display = "";
      } else {
        row.style.display = "none";
      }
    }
  }
</script>
